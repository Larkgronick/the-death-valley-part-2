(()=>{eval("var toDo = [];\nvar completed = [];\nvar index;\nvar toDoCount = 0;\nvar completedCount = 0;\nvar newTask = document.getElementById('new-task');\nvar addTaskButton = document.getElementById('add-task');\nvar editTaskButton = document.getElementById('edit-task');\nvar title = document.getElementById('inputTitle');\nvar text = document.getElementById('inputText');\nvar taskField = document.getElementById('currentTasks');\nvar completeField = document.getElementById('completedTasks');\nvar priorityFields = document.getElementsByClassName('form-check-input');\nvar newSort = document.getElementById('sort-from-new');\nvar oldSort = document.getElementById('sort-from-old');\nvar save = document.getElementById('save');\n\nfunction setTaskTime() {\n  var time = new Date().toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  var date = new Date().toLocaleDateString();\n  return time + ' ' + date;\n}\n\nfunction selectPriority() {\n  for (var i = 0; i < priorityFields.length; i++) {\n    if (priorityFields[i].checked) {\n      return priorityFields[i].value;\n    }\n  }\n}\n\nfunction createTaskField(count, area) {\n  var li = document.createElement('li');\n  li.classList.add(\"list-group-item\", \"d-flex\", \"w-100\", \"mb-2\");\n  area.appendChild(li);\n  var wrapper = document.createElement('div');\n  wrapper.classList.add(\"w-100\", \"mb-2\");\n  li.appendChild(wrapper);\n  var container = document.createElement('div');\n  container.classList.add(\"d-flex\", \"w-100\", \"justify-content-between\");\n  wrapper.appendChild(container);\n  var title = document.createElement('h5');\n  title.classList.add(\"mb-1\");\n  title.innerText = toDo[count].title;\n  container.appendChild(title);\n  var priorityDate = document.createElement('div');\n  container.appendChild(priorityDate);\n  var priority = document.createElement('small');\n  priority.classList.add(\"mr-2\");\n  priority.innerText = toDo[count].priority;\n  priorityDate.appendChild(priority);\n  var date = document.createElement('small');\n  date.innerText = toDo[count].time;\n  priorityDate.appendChild(date);\n  var text = document.createElement('p');\n  text.classList.add(\"mb-1\", \"w-100\");\n  text.innerText = toDo[count].text;\n  ;\n  wrapper.appendChild(text);\n  var deleteButton = document.createElement('button');\n  deleteButton.classList.add(\"btn\", \"btn-danger\", \"w-100\");\n  deleteButton.innerText = \"Delete\";\n\n  if (area === taskField) {\n    var dropdown = document.createElement('div');\n    dropdown.classList.add(\"dropdown\", \"m-2\", \"dropleft\");\n    li.appendChild(dropdown);\n    var dropdownButton = document.createElement('button');\n    dropdownButton.classList.add(\"btn\", \"btn-secondary\", \"h-100\");\n    dropdownButton.type = \"button\";\n    dropdownButton.id = \"dropdownMenuItem1\";\n    dropdownButton.setAttribute(\"data-toggle\", \"dropdown\");\n    dropdownButton.setAttribute(\"aria-haspopup\", \"true\");\n    dropdownButton.setAttribute(\"aria-expanded\", \"false\");\n    dropdown.appendChild(dropdownButton);\n    var i = document.createElement('i');\n    i.classList.add(\"fas\", \"fa-ellipsis-v\");\n    i.setAttribute(\"aria-hidden\", \"true\");\n    dropdownButton.appendChild(i);\n    var dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(\"dropdown-menu\", \"p-2\", \"flex-column\");\n    dropdownMenu.setAttribute(\"aria-labelledby\", \"dropdownMenuItem1\");\n    dropdownMenu.setAttribute(\"x-placement\", \"left-start\");\n    dropdownMenu.style = \"position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-162px, 0px, 0px);\";\n    dropdown.appendChild(dropdownMenu);\n    var completeButton = document.createElement('button');\n    completeButton.classList.add(\"btn\", \"btn-success\", \"w-100\");\n    completeButton.type = \"button\";\n    completeButton.onclick = moveToComplete;\n    completeButton.innerText = \"Complete\";\n    dropdownMenu.appendChild(completeButton);\n    var editButton = document.createElement('button');\n    editButton.classList.add(\"btn\", \"btn-info\", \"w-100\", \"my-2\");\n    editButton.type = \"button\";\n    editButton.setAttribute(\"data-toggle\", \"modal\");\n    editButton.setAttribute(\"data-target\", \"#exampleModal\");\n    editButton.onclick = editTaskData;\n    editButton.innerText = \"Edit\";\n    dropdownMenu.appendChild(editButton);\n    dropdownMenu.appendChild(deleteButton);\n    deleteButton.onclick = deleteTaskData;\n  } else {\n    li.appendChild(deleteButton);\n    deleteButton.style = \"width: 100px !important; margin-left: 20px\";\n    deleteButton.onclick = deleteTaskData;\n  }\n}\n\nfunction createNewTask() {\n  editTaskButton.style.display = \"none\";\n  addTaskButton.style.display = \"inline\";\n}\n\nfunction addTask() {\n  var taskCount = taskField.getElementsByTagName(\"li\").length;\n  var task = {\n    title: '',\n    text: '',\n    priority: '',\n    time: '',\n    date: ''\n  };\n  task.title = title.value;\n  task.text = text.value;\n  task.priority = selectPriority() + ' priority';\n  task.time = setTaskTime();\n  task.date = new Date();\n  toDo.push(task);\n  createTaskField(taskCount, taskField);\n  toDoCount++;\n  document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n}\n\nfunction moveToComplete() {\n  var currentTask = this.closest('.list-group-item');\n  index = Array.from(currentTask.parentNode.children).indexOf(currentTask);\n  taskField.removeChild(currentTask);\n  completed.push(toDo[index]);\n  createTaskField(index, completeField);\n  toDo.splice(index, 1);\n  toDoCount--;\n  document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n  completedCount++;\n  document.getElementById('completed-count').innerHTML = ' (' + completedCount + ')';\n}\n\nfunction editTaskData() {\n  addTaskButton.style.display = \"none\";\n  editTaskButton.style.display = \"inline\";\n  var currentTask = this.closest('.list-group-item');\n  index = Array.from(currentTask.parentNode.children).indexOf(currentTask);\n  title.value = toDo[index].title;\n  text.value = toDo[index].text;\n\n  switch (toDo[index].priority) {\n    case 'Low priority':\n      document.getElementById('Low').checked = \"true\";\n      break;\n\n    case 'Medium priority':\n      document.getElementById('Medium').checked = \"true\";\n      break;\n\n    case 'High priority':\n      document.getElementById('High').checked = \"true\";\n      break;\n\n    default:\n      document.getElementById('Low').checked = \"true\";\n      break;\n  }\n}\n\nfunction saveEditChanges() {\n  var task = {\n    title: '',\n    text: '',\n    priority: '',\n    time: ''\n  };\n  task.title = title.value;\n  task.text = text.value;\n  task.priority = selectPriority() + ' priority';\n  task.time = setTaskTime();\n  toDo.splice(index, 1, task);\n  var newTitle = taskField.children[index].getElementsByTagName(\"h5\")[0];\n  var newText = taskField.children[index].getElementsByTagName(\"p\")[0];\n  var newPriority = taskField.children[index].getElementsByTagName(\"small\")[0];\n  var newTime = taskField.children[index].getElementsByTagName(\"small\")[1];\n  newTitle.innerHTML = task.title;\n  newText.innerHTML = task.text;\n  newPriority.innerHTML = selectPriority() + ' priority';\n  newTime.innerHTML = setTaskTime();\n  editTaskButton.setAttribute(\"data-dismiss\", \"modal\");\n}\n\nfunction deleteTaskData() {\n  var currentTask = this.closest('.list-group-item');\n  index = Array.from(currentTask.parentNode.children).indexOf(currentTask);\n  var type = this.closest('.list-group-item').parentNode.id;\n\n  if (type === \"currentTasks\") {\n    toDo.splice(index, 1);\n    taskField.removeChild(currentTask);\n    toDoCount--;\n    document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n  } else {\n    completed.splice(index, 1);\n    completeField.removeChild(currentTask);\n    completedCount--;\n    document.getElementById('completed-count').innerHTML = ' (' + completedCount + ')';\n  }\n}\n\nfunction sortFromNew() {\n  toDo.sort(function (a, b) {\n    return new Date(a.date) - new Date(b.date);\n  });\n  taskField.innerHTML = \"\";\n  toDo.forEach(function (el, index) {\n    return createTaskField(index, taskField);\n  });\n}\n\nfunction sortFromOld() {\n  toDo.sort(function (a, b) {\n    return new Date(b.date) - new Date(a.date);\n  });\n  taskField.innerHTML = \"\";\n  toDo.forEach(function (el, index) {\n    return createTaskField(index, taskField);\n  });\n}\n\nnewTask.addEventListener('click', createNewTask);\naddTaskButton.addEventListener('click', addTask);\neditTaskButton.addEventListener('click', saveEditChanges);\nnewSort.addEventListener('click', sortFromNew);\noldSort.addEventListener('click', sortFromOld);\nsave.addEventListener('click', saveData);\n\nfunction saveData() {\n  localStorage.setItem('toDo', JSON.stringify(toDo));\n}\n\nwindow.onload = function loadTasks() {\n  taskField.innerHTML = \"\";\n  var loadedTodo = JSON.parse(localStorage.getItem('toDo'));\n\n  if (loadedTodo !== null) {\n    toDo = loadedTodo;\n    toDoCount = loadedTodo.length;\n  }\n\n  document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n  loadedTodo.forEach(function (el, index) {\n    return createTaskField(index, taskField);\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aGUtZGVhdGgtdmFsbGV5LXBhcnQtMi8uL3NyYy9pbmRleC5qcz9iNjM1Il0sIm5hbWVzIjpbInRvRG8iLCJjb21wbGV0ZWQiLCJpbmRleCIsInRvRG9Db3VudCIsImNvbXBsZXRlZENvdW50IiwibmV3VGFzayIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRUYXNrQnV0dG9uIiwiZWRpdFRhc2tCdXR0b24iLCJ0aXRsZSIsInRleHQiLCJ0YXNrRmllbGQiLCJjb21wbGV0ZUZpZWxkIiwicHJpb3JpdHlGaWVsZHMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwibmV3U29ydCIsIm9sZFNvcnQiLCJzYXZlIiwic2V0VGFza1RpbWUiLCJ0aW1lIiwiRGF0ZSIsInRvTG9jYWxlVGltZVN0cmluZyIsImhvdXIiLCJtaW51dGUiLCJkYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwic2VsZWN0UHJpb3JpdHkiLCJpIiwibGVuZ3RoIiwiY2hlY2tlZCIsInZhbHVlIiwiY3JlYXRlVGFza0ZpZWxkIiwiY291bnQiLCJhcmVhIiwibGkiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiYXBwZW5kQ2hpbGQiLCJ3cmFwcGVyIiwiY29udGFpbmVyIiwiaW5uZXJUZXh0IiwicHJpb3JpdHlEYXRlIiwicHJpb3JpdHkiLCJkZWxldGVCdXR0b24iLCJkcm9wZG93biIsImRyb3Bkb3duQnV0dG9uIiwidHlwZSIsImlkIiwic2V0QXR0cmlidXRlIiwiZHJvcGRvd25NZW51Iiwic3R5bGUiLCJjb21wbGV0ZUJ1dHRvbiIsIm9uY2xpY2siLCJtb3ZlVG9Db21wbGV0ZSIsImVkaXRCdXR0b24iLCJlZGl0VGFza0RhdGEiLCJkZWxldGVUYXNrRGF0YSIsImNyZWF0ZU5ld1Rhc2siLCJkaXNwbGF5IiwiYWRkVGFzayIsInRhc2tDb3VudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwidGFzayIsInB1c2giLCJpbm5lckhUTUwiLCJjdXJyZW50VGFzayIsImNsb3Nlc3QiLCJBcnJheSIsImZyb20iLCJwYXJlbnROb2RlIiwiY2hpbGRyZW4iLCJpbmRleE9mIiwicmVtb3ZlQ2hpbGQiLCJzcGxpY2UiLCJzYXZlRWRpdENoYW5nZXMiLCJuZXdUaXRsZSIsIm5ld1RleHQiLCJuZXdQcmlvcml0eSIsIm5ld1RpbWUiLCJzb3J0RnJvbU5ldyIsInNvcnQiLCJhIiwiYiIsImZvckVhY2giLCJlbCIsInNvcnRGcm9tT2xkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNhdmVEYXRhIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ3aW5kb3ciLCJvbmxvYWQiLCJsb2FkVGFza3MiLCJsb2FkZWRUb2RvIiwicGFyc2UiLCJnZXRJdGVtIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJLEdBQUcsRUFBWDtBQUNBLElBQUlDLFNBQVMsR0FBRyxFQUFoQjtBQUNBLElBQUlDLEtBQUo7QUFDQSxJQUFJQyxTQUFTLEdBQUcsQ0FBaEI7QUFDQSxJQUFJQyxjQUFjLEdBQUcsQ0FBckI7QUFFQSxJQUFNQyxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixVQUF4QixDQUFoQjtBQUNBLElBQU1DLGFBQWEsR0FBR0YsUUFBUSxDQUFDQyxjQUFULENBQXdCLFVBQXhCLENBQXRCO0FBQ0EsSUFBTUUsY0FBYyxHQUFHSCxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBdkI7QUFDQSxJQUFNRyxLQUFLLEdBQUdKLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixZQUF4QixDQUFkO0FBQ0EsSUFBTUksSUFBSSxHQUFHTCxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBYjtBQUNBLElBQU1LLFNBQVMsR0FBR04sUUFBUSxDQUFDQyxjQUFULENBQXdCLGNBQXhCLENBQWxCO0FBQ0EsSUFBTU0sYUFBYSxHQUFHUCxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsZ0JBQXhCLENBQXRCO0FBQ0EsSUFBTU8sY0FBYyxHQUFHUixRQUFR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dUI7QUFDbkJqRyxJQUFBQSxJQUFJLEdBQUdpRyxVQUFQO0FBQ0E5RixJQUFBQSxTQUFTLEdBQUc4RixVQUFVLENBQUNwRSxNQUF2QjtBQUNIOztBQUNEdkIsRUFBQUEsUUFBUSxDQUFDQyxjQUFULENBQXdCLFlBQXhCLEVBQXNDMkQsU0FBdEMsR0FBa0QsT0FBTy9ELFNBQVAsR0FBbUIsR0FBckU7QUFDQThGLEVBQUFBLFVBQVUsQ0FBQ1osT0FBWCxDQUFtQixVQUFTQyxFQUFULEVBQWFwRixLQUFiLEVBQW1CO0FBQ2xDLFdBQU84QixlQUFlLENBQUM5QixLQUFELEVBQVFVLFNBQVIsQ0FBdEI7QUFDSCxHQUZEO0FBR0gsQ0FYRCIsInNvdXJjZXNDb250ZW50IjpbImxldCB0b0RvID0gW107XHJcbmxldCBjb21wbGV0ZWQgPSBbXTtcclxubGV0IGluZGV4OyBcclxubGV0IHRvRG9Db3VudCA9IDA7IFxyXG5sZXQgY29tcGxldGVkQ291bnQgPSAwOyBcclxuXHJcbmNvbnN0IG5ld1Rhc2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmV3LXRhc2snKTtcclxuY29uc3QgYWRkVGFza0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQtdGFzaycpO1xyXG5jb25zdCBlZGl0VGFza0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlZGl0LXRhc2snKTtcclxuY29uc3QgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5wdXRUaXRsZScpO1xyXG5jb25zdCB0ZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lucHV0VGV4dCcpO1xyXG5jb25zdCB0YXNrRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3VycmVudFRhc2tzJyk7XHJcbmNvbnN0IGNvbXBsZXRlRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29tcGxldGVkVGFza3MnKTtcclxuY29uc3QgcHJpb3JpdHlGaWVsZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdmb3JtLWNoZWNrLWlucHV0Jyk7XHJcbmNvbnN0IG5ld1NvcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc29ydC1mcm9tLW5ldycpO1xyXG5jb25zdCBvbGRTb3J0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NvcnQtZnJvbS1vbGQnKTtcclxuY29uc3Qgc2F2ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzYXZlJyk7XHJcblxyXG5cclxuZnVuY3Rpb24gc2V0VGFza1RpbWUoKXtcclxuICAgIGxldCB0aW1lID0gbmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoW10sIHtob3VyOiAnMi1kaWdpdCcsIG1pbnV0ZTonMi1kaWdpdCd9KTtcclxuICAgIGxldCBkYXRlID0gbmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcclxuICAgIHJldHVybiB0aW1lICsgJyAnICsgZGF0ZTtcclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNlbGVjdFByaW9yaXR5KCl7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByaW9yaXR5RmllbGRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKHByaW9yaXR5RmllbGRzW2ldLmNoZWNrZWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHByaW9yaXR5RmllbGRzW2ldLnZhbHVlOyAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZVRhc2tGaWVsZChjb3VudCwgYXJlYSl7XHJcbiAgICBsZXQgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgbGkuY2xhc3NMaXN0LmFkZChcImxpc3QtZ3JvdXAtaXRlbVwiLFwiZC1mbGV4XCIsXCJ3LTEwMFwiLCBcIm1iLTJcIik7XHJcbiAgICBhcmVhLmFwcGVuZENoaWxkKGxpKTtcclxuICAgIGxldCB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB3cmFwcGVyLmNsYXNzTGlzdC5hZGQoXCJ3LTEwMFwiLCBcIm1iLTJcIik7XHJcbiAgICBsaS5hcHBlbmRDaGlsZCh3cmFwcGVyKTtcclxuICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZC1mbGV4XCIsIFwidy0xMDBcIiwgXCJqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiKTtcclxuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcclxuICAgIGxldCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g1Jyk7XHJcbiAgICB0aXRsZS5jbGFzc0xpc3QuYWRkKFwibWItMVwiKTtcclxuICAgIHRpdGxlLmlubmVyVGV4dCA9IHRvRG9bY291bnRdLnRpdGxlO1xyXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlKTtcclxuICAgIGxldCBwcmlvcml0eURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChwcmlvcml0eURhdGUpO1xyXG4gICAgbGV0IHByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc21hbGwnKTtcclxuICAgIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoXCJtci0yXCIpO1xyXG4gICAgcHJpb3JpdHkuaW5uZXJUZXh0ID0gdG9Eb1tjb3VudF0ucHJpb3JpdHk7XHJcbiAgICBwcmlvcml0eURhdGUuYXBwZW5kQ2hpbGQocHJpb3JpdHkpO1xyXG4gICAgbGV0IGRhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzbWFsbCcpO1xyXG4gICAgZGF0ZS5pbm5lclRleHQgPSB0b0RvW2NvdW50XS50aW1lO1xyXG4gICAgcHJpb3JpdHlEYXRlLmFwcGVuZENoaWxkKGRhdGUpO1xyXG4gICAgbGV0IHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICB0ZXh0LmNsYXNzTGlzdC5hZGQoXCJtYi0xXCIsIFwidy0xMDBcIik7XHJcbiAgICB0ZXh0LmlubmVyVGV4dCA9IHRvRG9bY291bnRdLnRleHQ7O1xyXG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZCh0ZXh0KTtcclxuICAgIGxldCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgIGRlbGV0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiYnRuXCIsIFwiYnRuLWRhbmdlclwiLCBcInctMTAwXCIpO1xyXG4gICAgZGVsZXRlQnV0dG9uLmlubmVyVGV4dCA9IFwiRGVsZXRlXCI7XHJcbiAgICBpZiAoYXJlYSA9PT0gdGFza0ZpZWxkKSB7XHJcbiAgICAgICAgbGV0IGRyb3Bkb3duID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgZHJvcGRvd24uY2xhc3NMaXN0LmFkZChcImRyb3Bkb3duXCIsIFwibS0yXCIsIFwiZHJvcGxlZnRcIik7XHJcbiAgICAgICAgbGkuYXBwZW5kQ2hpbGQoZHJvcGRvd24pO1xyXG4gICAgICAgIGxldCBkcm9wZG93bkJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgICAgIGRyb3Bkb3duQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJidG5cIiwgXCJidG4tc2Vjb25kYXJ5XCIsIFwiaC0xMDBcIik7XHJcbiAgICAgICAgZHJvcGRvd25CdXR0b24udHlwZSA9IFwiYnV0dG9uXCI7XHJcbiAgICAgICAgZHJvcGRvd25CdXR0b24uaWQgPSBcImRyb3Bkb3duTWVudUl0ZW0xXCI7XHJcbiAgICAgICAgZHJvcGRvd25CdXR0b24uc2V0QXR0cmlidXRlKFwiZGF0YS10b2dnbGVcIiwgXCJkcm9wZG93blwiKTtcclxuICAgICAgICBkcm9wZG93bkJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJhcmlhLWhhc3BvcHVwXCIsIFwidHJ1ZVwiKTtcclxuICAgICAgICBkcm9wZG93bkJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJhcmlhLWV4cGFuZGVkXCIsIFwiZmFsc2VcIik7XHJcbiAgICAgICAgZHJvcGRvd24uYXBwZW5kQ2hpbGQoZHJvcGRvd25CdXR0b24pO1xyXG4gICAgICAgIGxldCBpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpO1xyXG4gICAgICAgIGkuY2xhc3NMaXN0LmFkZChcImZhc1wiLCBcImZhLWVsbGlwc2lzLXZcIik7XHJcbiAgICAgICAgaS5zZXRBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiLCBcInRydWVcIik7XHJcbiAgICAgICAgZHJvcGRvd25CdXR0b24uYXBwZW5kQ2hpbGQoaSk7XHJcbiAgICAgICAgbGV0IGRyb3Bkb3duTWVudSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGRyb3Bkb3duTWVudS5jbGFzc0xpc3QuYWRkKFwiZHJvcGRvd24tbWVudVwiLCBcInAtMlwiLCBcImZsZXgtY29sdW1uXCIpO1xyXG4gICAgICAgIGRyb3Bkb3duTWVudS5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsbGVkYnlcIiwgXCJkcm9wZG93bk1lbnVJdGVtMVwiKTtcclxuICAgICAgICBkcm9wZG93bk1lbnUuc2V0QXR0cmlidXRlKFwieC1wbGFjZW1lbnRcIiwgXCJsZWZ0LXN0YXJ0XCIpO1xyXG4gICAgICAgIGRyb3Bkb3duTWVudS5zdHlsZSA9IFwicG9zaXRpb246IGFic29sdXRlOyB3aWxsLWNoYW5nZTogdHJhbnNmb3JtOyB0b3A6IDBweDsgbGVmdDogMHB4OyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xNjJweCwgMHB4LCAwcHgpO1wiXHJcbiAgICAgICAgZHJvcGRvd24uYXBwZW5kQ2hpbGQoZHJvcGRvd25NZW51KTtcclxuICAgICAgICBsZXQgY29tcGxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICBjb21wbGV0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiYnRuXCIsIFwiYnRuLXN1Y2Nlc3NcIiwgXCJ3LTEwMFwiKTtcclxuICAgICAgICBjb21wbGV0ZUJ1dHRvbi50eXBlID0gXCJidXR0b25cIjtcclxuICAgICAgICBjb21wbGV0ZUJ1dHRvbi5vbmNsaWNrID0gbW92ZVRvQ29tcGxldGU7XHJcbiAgICAgICAgY29tcGxldGVCdXR0b24uaW5uZXJUZXh0ID0gXCJDb21wbGV0ZVwiO1xyXG4gICAgICAgIGRyb3Bkb3duTWVudS5hcHBlbmRDaGlsZChjb21wbGV0ZUJ1dHRvbik7XHJcbiAgICAgICAgbGV0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICBlZGl0QnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJidG5cIiwgXCJidG4taW5mb1wiLCBcInctMTAwXCIsIFwibXktMlwiKTtcclxuICAgICAgICBlZGl0QnV0dG9uLnR5cGUgPSBcImJ1dHRvblwiO1xyXG4gICAgICAgIGVkaXRCdXR0b24uc2V0QXR0cmlidXRlKFwiZGF0YS10b2dnbGVcIiwgXCJtb2RhbFwiKTtcclxuICAgICAgICBlZGl0QnV0dG9uLnNldEF0dHJpYnV0ZShcImRhdGEtdGFyZ2V0XCIsIFwiI2V4YW1wbGVNb2RhbFwiKTtcclxuICAgICAgICBlZGl0QnV0dG9uLm9uY2xpY2sgPSBlZGl0VGFza0RhdGE7XHJcbiAgICAgICAgZWRpdEJ1dHRvbi5pbm5lclRleHQgPSBcIkVkaXRcIjtcclxuICAgICAgICBkcm9wZG93bk1lbnUuYXBwZW5kQ2hpbGQoZWRpdEJ1dHRvbik7XHJcbiAgICAgICAgZHJvcGRvd25NZW51LmFwcGVuZENoaWxkKGRlbGV0ZUJ1dHRvbik7XHJcbiAgICAgICAgZGVsZXRlQnV0dG9uLm9uY2xpY2sgPSBkZWxldGVUYXNrRGF0YTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbGkuYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTsgXHJcbiAgICAgICAgZGVsZXRlQnV0dG9uLnN0eWxlID0gXCJ3aWR0aDogMTAwcHggIWltcG9ydGFudDsgbWFyZ2luLWxlZnQ6IDIwcHhcIjtcclxuICAgICAgICBkZWxldGVCdXR0b24ub25jbGljayA9IGRlbGV0ZVRhc2tEYXRhO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlTmV3VGFzaygpe1xyXG4gICAgZWRpdFRhc2tCdXR0b24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgYWRkVGFza0J1dHRvbi5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmVcIjtcclxuXHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBhZGRUYXNrKCl7XHJcbiAgICBjb25zdCB0YXNrQ291bnQgPSB0YXNrRmllbGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJsaVwiKS5sZW5ndGhcclxuICAgIGxldCB0YXNrID0ge1xyXG4gICAgICAgIHRpdGxlOiAnJyxcclxuICAgICAgICB0ZXh0OiAnJyxcclxuICAgICAgICBwcmlvcml0eTogJycsXHJcbiAgICAgICAgdGltZTogJycsXHJcbiAgICAgICAgZGF0ZTogJydcclxuXHJcbiAgICB9XHJcbiAgICB0YXNrLnRpdGxlID0gdGl0bGUudmFsdWU7XHJcbiAgICB0YXNrLnRleHQgPSB0ZXh0LnZhbHVlO1xyXG4gICAgdGFzay5wcmlvcml0eSA9IHNlbGVjdFByaW9yaXR5KCkgKyAnIHByaW9yaXR5JztcclxuICAgIHRhc2sudGltZSA9IHNldFRhc2tUaW1lKCk7XHJcbiAgICB0YXNrLmRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgdG9Eby5wdXNoKHRhc2spO1xyXG4gICAgY3JlYXRlVGFza0ZpZWxkKHRhc2tDb3VudCwgdGFza0ZpZWxkKTtcclxuICAgIHRvRG9Db3VudCsrXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9Eby1jb3VudCcpLmlubmVySFRNTCA9ICcgKCcgKyB0b0RvQ291bnQgKyAnKSc7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBtb3ZlVG9Db21wbGV0ZSAoKXtcclxuICAgIGxldCBjdXJyZW50VGFzayA9IHRoaXMuY2xvc2VzdCgnLmxpc3QtZ3JvdXAtaXRlbScpO1xyXG4gICAgaW5kZXggPSBBcnJheS5mcm9tKGN1cnJlbnRUYXNrLnBhcmVudE5vZGUuY2hpbGRyZW4pLmluZGV4T2YoY3VycmVudFRhc2spO1xyXG4gICAgdGFza0ZpZWxkLnJlbW92ZUNoaWxkKGN1cnJlbnRUYXNrKTsgICAgXHJcbiAgICBjb21wbGV0ZWQucHVzaCh0b0RvW2luZGV4XSk7XHJcbiAgICBjcmVhdGVUYXNrRmllbGQoaW5kZXgsIGNvbXBsZXRlRmllbGQpXHJcbiAgICB0b0RvLnNwbGljZShpbmRleCwxKTtcclxuICAgIHRvRG9Db3VudC0tXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9Eby1jb3VudCcpLmlubmVySFRNTCA9ICcgKCcgKyB0b0RvQ291bnQgKyAnKSc7XHJcbiAgICBjb21wbGV0ZWRDb3VudCsrXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29tcGxldGVkLWNvdW50JykuaW5uZXJIVE1MID0gJyAoJyArIGNvbXBsZXRlZENvdW50ICsgJyknO1xyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gZWRpdFRhc2tEYXRhKCl7XHJcbiAgICBhZGRUYXNrQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGVkaXRUYXNrQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBcImlubGluZVwiO1xyXG4gICAgbGV0IGN1cnJlbnRUYXNrID0gdGhpcy5jbG9zZXN0KCcubGlzdC1ncm91cC1pdGVtJyk7XHJcbiAgICBpbmRleCA9IEFycmF5LmZyb20oY3VycmVudFRhc2sucGFyZW50Tm9kZS5jaGlsZHJlbikuaW5kZXhPZihjdXJyZW50VGFzayk7XHJcbiAgICB0aXRsZS52YWx1ZSA9IHRvRG9baW5kZXhdLnRpdGxlO1xyXG4gICAgdGV4dC52YWx1ZSA9IHRvRG9baW5kZXhdLnRleHQ7XHJcbiAgICBzd2l0Y2ggKHRvRG9baW5kZXhdLnByaW9yaXR5KSB7XHJcbiAgICAgICAgY2FzZSAnTG93IHByaW9yaXR5JzpcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0xvdycpLmNoZWNrZWQgPSBcInRydWVcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnTWVkaXVtIHByaW9yaXR5JzpcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ01lZGl1bScpLmNoZWNrZWQgPSBcInRydWVcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgIGNhc2UgJ0hpZ2ggcHJpb3JpdHknOlxyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSGlnaCcpLmNoZWNrZWQgPSBcInRydWVcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0xvdycpLmNoZWNrZWQgPSBcInRydWVcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNhdmVFZGl0Q2hhbmdlcygpeyAgIFxyXG4gICAgbGV0IHRhc2sgPSB7XHJcbiAgICAgICAgdGl0bGU6ICcnLFxyXG4gICAgICAgIHRleHQ6ICcnLFxyXG4gICAgICAgIHByaW9yaXR5OiAnJyxcclxuICAgICAgICB0aW1lOiAnJ1xyXG5cclxuICAgIH1cclxuICAgIHRhc2sudGl0bGUgPSB0aXRsZS52YWx1ZTtcclxuICAgIHRhc2sudGV4dCA9IHRleHQudmFsdWU7XHJcbiAgICB0YXNrLnByaW9yaXR5ID0gc2VsZWN0UHJpb3JpdHkoKSArICcgcHJpb3JpdHknO1xyXG4gICAgdGFzay50aW1lID0gc2V0VGFza1RpbWUoKTtcclxuICAgIHRvRG8uc3BsaWNlKGluZGV4LCAxLCB0YXNrKTtcclxuICAgIGxldCBuZXdUaXRsZSA9IHRhc2tGaWVsZC5jaGlsZHJlbltpbmRleF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoNVwiKVswXTsgIFxyXG4gICAgbGV0IG5ld1RleHQgPSB0YXNrRmllbGQuY2hpbGRyZW5baW5kZXhdLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicFwiKVswXTsgIFxyXG4gICAgbGV0IG5ld1ByaW9yaXR5ID0gdGFza0ZpZWxkLmNoaWxkcmVuW2luZGV4XS5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNtYWxsXCIpWzBdOyAgXHJcbiAgICBsZXQgbmV3VGltZSA9ICB0YXNrRmllbGQuY2hpbGRyZW5baW5kZXhdLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic21hbGxcIilbMV07ICBcclxuICAgIG5ld1RpdGxlLmlubmVySFRNTCA9IHRhc2sudGl0bGU7XHJcbiAgICBuZXdUZXh0LmlubmVySFRNTCA9IHRhc2sudGV4dDtcclxuICAgIG5ld1ByaW9yaXR5LmlubmVySFRNTCA9IHNlbGVjdFByaW9yaXR5KCkgKyAnIHByaW9yaXR5JztcclxuICAgIG5ld1RpbWUuaW5uZXJIVE1MID0gc2V0VGFza1RpbWUoKTtcclxuICAgIGVkaXRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZShcImRhdGEtZGlzbWlzc1wiLCBcIm1vZGFsXCIpXHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBkZWxldGVUYXNrRGF0YSgpe1xyXG4gICAgbGV0IGN1cnJlbnRUYXNrID0gdGhpcy5jbG9zZXN0KCcubGlzdC1ncm91cC1pdGVtJyk7XHJcbiAgICBpbmRleCA9IEFycmF5LmZyb20oY3VycmVudFRhc2sucGFyZW50Tm9kZS5jaGlsZHJlbikuaW5kZXhPZihjdXJyZW50VGFzayk7XHJcbiAgICBsZXQgdHlwZSA9IHRoaXMuY2xvc2VzdCgnLmxpc3QtZ3JvdXAtaXRlbScpLnBhcmVudE5vZGUuaWQ7XHJcbiAgICBpZih0eXBlID09PSBcImN1cnJlbnRUYXNrc1wiKXtcclxuICAgICAgICB0b0RvLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgdGFza0ZpZWxkLnJlbW92ZUNoaWxkKGN1cnJlbnRUYXNrKTsgXHJcbiAgICAgICAgdG9Eb0NvdW50LS1cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9Eby1jb3VudCcpLmlubmVySFRNTCA9ICcgKCcgKyB0b0RvQ291bnQgKyAnKSc7ICBcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29tcGxldGVkLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgY29tcGxldGVGaWVsZC5yZW1vdmVDaGlsZChjdXJyZW50VGFzayk7ICAgXHJcbiAgICAgICAgY29tcGxldGVkQ291bnQtLVxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb21wbGV0ZWQtY291bnQnKS5pbm5lckhUTUwgPSAnICgnICsgY29tcGxldGVkQ291bnQgKyAnKSc7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBzb3J0RnJvbU5ldygpe1xyXG4gICAgdG9Eby5zb3J0KGZ1bmN0aW9uKGEsYil7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGEuZGF0ZSkgLSBuZXcgRGF0ZShiLmRhdGUpO1xyXG4gICAgICB9KTtcclxuICAgIHRhc2tGaWVsZC5pbm5lckhUTUwgPSBcIlwiO1xyXG4gICAgdG9Eby5mb3JFYWNoKGZ1bmN0aW9uKGVsLCBpbmRleCl7XHJcbiAgICAgICAgcmV0dXJuIGNyZWF0ZVRhc2tGaWVsZChpbmRleCwgdGFza0ZpZWxkKTtcclxuICAgIH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNvcnRGcm9tT2xkKCl7XHJcbiAgICB0b0RvLnNvcnQoZnVuY3Rpb24oYSxiKXtcclxuICAgICAgICByZXR1cm4gbmV3IERhdGUoYi5kYXRlKSAtIG5ldyBEYXRlKGEuZGF0ZSk7IFxyXG4gICAgICB9KTtcclxuICAgIHRhc2tGaWVsZC5pbm5lckhUTUwgPSBcIlwiO1xyXG4gICAgdG9Eby5mb3JFYWNoKGZ1bmN0aW9uKGVsLCBpbmRleCl7XHJcbiAgICAgICAgcmV0dXJuIGNyZWF0ZVRhc2tGaWVsZChpbmRleCwgdGFza0ZpZWxkKTtcclxuICAgIH0pXHJcbn1cclxuXHJcbm5ld1Rhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjcmVhdGVOZXdUYXNrKVxyXG5hZGRUYXNrQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWRkVGFzayk7XHJcbmVkaXRUYXNrQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2F2ZUVkaXRDaGFuZ2VzKTtcclxubmV3U29ydC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNvcnRGcm9tTmV3KTtcclxub2xkU29ydC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNvcnRGcm9tT2xkKTtcclxuc2F2ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNhdmVEYXRhKVxyXG5cclxuXHJcbmZ1bmN0aW9uIHNhdmVEYXRhKCl7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9EbycsIEpTT04uc3RyaW5naWZ5KHRvRG8pKTtcclxufVxyXG5cclxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uIGxvYWRUYXNrcygpIHtcclxuICAgIHRhc2tGaWVsZC5pbm5lckhUTUwgPSBcIlwiO1xyXG4gICAgY29uc3QgbG9hZGVkVG9kbyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3RvRG8nKSk7XHJcbiAgICBpZihsb2FkZWRUb2RvICE9PSBudWxsKXtcclxuICAgICAgICB0b0RvID0gbG9hZGVkVG9kbztcclxuICAgICAgICB0b0RvQ291bnQgPSBsb2FkZWRUb2RvLmxlbmd0aDtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b0RvLWNvdW50JykuaW5uZXJIVE1MID0gJyAoJyArIHRvRG9Db3VudCArICcpJzsgXHJcbiAgICBsb2FkZWRUb2RvLmZvckVhY2goZnVuY3Rpb24oZWwsIGluZGV4KXtcclxuICAgICAgICByZXR1cm4gY3JlYXRlVGFza0ZpZWxkKGluZGV4LCB0YXNrRmllbGQpO1xyXG4gICAgfSlcclxufVxyXG4gIl0sImZpbGUiOiIzNTIuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///352\n")})();