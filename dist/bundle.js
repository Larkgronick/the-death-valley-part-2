(()=>{eval("var toDo = [];\nvar loadedTodo = [];\nvar completed = [];\nvar index;\nvar toDoCount = 0;\nvar completedCount = 0;\nvar newTask = document.getElementById('new-task');\nvar addTaskButton = document.getElementById('add-task');\nvar editTaskButton = document.getElementById('edit-task');\nvar title = document.getElementById('inputTitle');\nvar text = document.getElementById('inputText');\nvar taskField = document.getElementById('currentTasks');\nvar completeField = document.getElementById('completedTasks');\nvar priorityFields = document.getElementsByClassName('form-check-input');\nvar newSort = document.getElementById('sort-from-new');\nvar oldSort = document.getElementById('sort-from-old');\nvar save = document.getElementById('save');\nvar themeSwitcher = document.getElementById('customSwitch1');\n\nfunction setTaskTime() {\n  var time = new Date().toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  var date = new Date().toLocaleDateString();\n  return time + ' ' + date;\n}\n\nfunction selectPriority() {\n  for (var i = 0; i < priorityFields.length; i++) {\n    if (priorityFields[i].checked) {\n      return priorityFields[i].value;\n    }\n  }\n}\n\nfunction createTaskField(count, area) {\n  var li = document.createElement('li');\n  li.classList.add(\"list-group-item\", \"d-flex\", \"w-100\", \"mb-2\");\n  area.appendChild(li);\n  colorizeTask(li, toDo[count].priority);\n  var wrapper = document.createElement('div');\n  wrapper.classList.add(\"w-100\", \"mb-2\");\n  li.appendChild(wrapper);\n  var container = document.createElement('div');\n  container.classList.add(\"d-flex\", \"w-100\", \"justify-content-between\");\n  wrapper.appendChild(container);\n  var title = document.createElement('h5');\n  title.classList.add(\"mb-1\");\n  title.innerText = toDo[count].title;\n  container.appendChild(title);\n  var priorityDate = document.createElement('div');\n  container.appendChild(priorityDate);\n  var priority = document.createElement('small');\n  priority.classList.add(\"mr-2\");\n  priority.innerText = toDo[count].priority;\n  priorityDate.appendChild(priority);\n  var date = document.createElement('small');\n  date.innerText = toDo[count].time;\n  priorityDate.appendChild(date);\n  var text = document.createElement('p');\n  text.classList.add(\"mb-1\", \"w-100\");\n  text.innerText = toDo[count].text;\n  ;\n  wrapper.appendChild(text);\n  var deleteButton = document.createElement('button');\n  deleteButton.classList.add(\"btn\", \"btn-danger\", \"w-100\");\n  deleteButton.innerText = \"Delete\";\n\n  if (area === taskField) {\n    var dropdown = document.createElement('div');\n    dropdown.classList.add(\"dropdown\", \"m-2\", \"dropleft\");\n    li.appendChild(dropdown);\n    var dropdownButton = document.createElement('button');\n    dropdownButton.classList.add(\"btn\", \"btn-secondary\", \"h-100\");\n    dropdownButton.type = \"button\";\n    dropdownButton.id = \"dropdownMenuItem1\";\n    dropdownButton.setAttribute(\"data-toggle\", \"dropdown\");\n    dropdownButton.setAttribute(\"aria-haspopup\", \"true\");\n    dropdownButton.setAttribute(\"aria-expanded\", \"false\");\n    dropdown.appendChild(dropdownButton);\n    var i = document.createElement('i');\n    i.classList.add(\"fas\", \"fa-ellipsis-v\");\n    i.setAttribute(\"aria-hidden\", \"true\");\n    dropdownButton.appendChild(i);\n    var dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(\"dropdown-menu\", \"p-2\", \"flex-column\");\n    dropdownMenu.setAttribute(\"aria-labelledby\", \"dropdownMenuItem1\");\n    dropdownMenu.setAttribute(\"x-placement\", \"left-start\");\n    dropdownMenu.style = \"position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-162px, 0px, 0px);\";\n    dropdown.appendChild(dropdownMenu);\n    var completeButton = document.createElement('button');\n    completeButton.classList.add(\"btn\", \"btn-success\", \"w-100\");\n    completeButton.type = \"button\";\n    completeButton.onclick = moveToComplete;\n    completeButton.innerText = \"Complete\";\n    dropdownMenu.appendChild(completeButton);\n    var editButton = document.createElement('button');\n    editButton.classList.add(\"btn\", \"btn-info\", \"w-100\", \"my-2\");\n    editButton.type = \"button\";\n    editButton.setAttribute(\"data-toggle\", \"modal\");\n    editButton.setAttribute(\"data-target\", \"#exampleModal\");\n    editButton.onclick = editTaskData;\n    editButton.innerText = \"Edit\";\n    dropdownMenu.appendChild(editButton);\n    dropdownMenu.appendChild(deleteButton);\n    deleteButton.onclick = deleteTaskData;\n  } else {\n    li.appendChild(deleteButton);\n    deleteButton.style = \"width: 100px !important; margin-left: 20px\";\n    deleteButton.onclick = deleteTaskData;\n  }\n}\n\nfunction colorizeTask(li, priority) {\n  switch (priority) {\n    case 'Low priority':\n      li.style.backgroundColor = '#ffc916';\n      break;\n\n    case 'Medium priority':\n      li.style.backgroundColor = '#a3cd3b';\n      break;\n\n    case 'High priority':\n      li.style.backgroundColor = '#ff4943';\n      break;\n  }\n}\n\nfunction createNewTask() {\n  editTaskButton.style.display = \"none\";\n  addTaskButton.style.display = \"inline\";\n}\n\nfunction addTask() {\n  var taskCount = taskField.getElementsByTagName(\"li\").length;\n  var task = {\n    title: '',\n    text: '',\n    priority: '',\n    time: '',\n    date: ''\n  };\n  task.title = title.value;\n  task.text = text.value;\n  task.priority = selectPriority() + ' priority';\n  task.time = setTaskTime();\n  task.date = new Date();\n  toDo.push(task);\n  createTaskField(taskCount, taskField);\n  toDoCount++;\n  document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n}\n\nfunction moveToComplete() {\n  var currentTask = this.closest('.list-group-item');\n  index = Array.from(currentTask.parentNode.children).indexOf(currentTask);\n  taskField.removeChild(currentTask);\n  completed.push(toDo[index]);\n  createTaskField(index, completeField);\n  toDo.splice(index, 1);\n  toDoCount--;\n  document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n  completedCount++;\n  document.getElementById('completed-count').innerHTML = ' (' + completedCount + ')';\n}\n\nfunction editTaskData() {\n  addTaskButton.style.display = \"none\";\n  editTaskButton.style.display = \"inline\";\n  var currentTask = this.closest('.list-group-item');\n  index = Array.from(currentTask.parentNode.children).indexOf(currentTask);\n  title.value = toDo[index].title;\n  text.value = toDo[index].text;\n\n  switch (toDo[index].priority) {\n    case 'Low priority':\n      document.getElementById('Low').checked = \"true\";\n      break;\n\n    case 'Medium priority':\n      document.getElementById('Medium').checked = \"true\";\n      break;\n\n    case 'High priority':\n      document.getElementById('High').checked = \"true\";\n      break;\n\n    default:\n      document.getElementById('Low').checked = \"true\";\n      break;\n  }\n}\n\nfunction saveEditChanges() {\n  var li = document.querySelectorAll('.list-group-item')[index];\n  var task = {\n    title: '',\n    text: '',\n    priority: '',\n    time: ''\n  };\n  task.title = title.value;\n  task.text = text.value;\n  task.priority = selectPriority() + ' priority';\n  task.time = setTaskTime();\n  toDo.splice(index, 1, task);\n  var newTitle = taskField.children[index].getElementsByTagName(\"h5\")[0];\n  var newText = taskField.children[index].getElementsByTagName(\"p\")[0];\n  var newPriority = taskField.children[index].getElementsByTagName(\"small\")[0];\n  var newTime = taskField.children[index].getElementsByTagName(\"small\")[1];\n  newTitle.innerHTML = task.title;\n  newText.innerHTML = task.text;\n  newPriority.innerHTML = selectPriority() + ' priority';\n  newTime.innerHTML = setTaskTime();\n  colorizeTask(li, selectPriority() + ' priority');\n  editTaskButton.setAttribute(\"data-dismiss\", \"modal\");\n}\n\nfunction deleteTaskData() {\n  var currentTask = this.closest('.list-group-item');\n  index = Array.from(currentTask.parentNode.children).indexOf(currentTask);\n  var type = this.closest('.list-group-item').parentNode.id;\n\n  if (type === \"currentTasks\") {\n    toDo.splice(index, 1);\n    taskField.removeChild(currentTask);\n    toDoCount--;\n    document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n  } else {\n    completed.splice(index, 1);\n    completeField.removeChild(currentTask);\n    completedCount--;\n    document.getElementById('completed-count').innerHTML = ' (' + completedCount + ')';\n  }\n}\n\nfunction sortFromNew() {\n  toDo.sort(function (a, b) {\n    return new Date(a.date) - new Date(b.date);\n  });\n  taskField.innerHTML = \"\";\n  toDo.forEach(function (el, index) {\n    return createTaskField(index, taskField);\n  });\n}\n\nfunction sortFromOld() {\n  toDo.sort(function (a, b) {\n    return new Date(b.date) - new Date(a.date);\n  });\n  taskField.innerHTML = \"\";\n  toDo.forEach(function (el, index) {\n    return createTaskField(index, taskField);\n  });\n}\n\nfunction changeTheme() {\n  if (themeSwitcher.checked) {\n    document.querySelector('.navbar').classList.remove('bg-light');\n    document.querySelector('.modal-content').style.backgroundColor = '#0e1621';\n    document.body.style.backgroundColor = '#0e1621';\n    document.body.style.color = 'white';\n    themeSwitcher.nextElementSibling.textContent = 'Dark Mode';\n  } else {\n    document.querySelector('.navbar').classList.add('bg-light');\n    document.querySelector('.modal-content').style.backgroundColor = 'white';\n    document.body.style.backgroundColor = 'white';\n    document.body.style.color = 'black';\n    themeSwitcher.nextElementSibling.textContent = 'White Mode';\n  }\n}\n\nnewTask.addEventListener('click', createNewTask);\naddTaskButton.addEventListener('click', addTask);\neditTaskButton.addEventListener('click', saveEditChanges);\nnewSort.addEventListener('click', sortFromNew);\noldSort.addEventListener('click', sortFromOld);\nsave.addEventListener('click', saveData);\nthemeSwitcher.addEventListener('click', changeTheme);\n\nfunction saveData() {\n  localStorage.setItem('toDo', JSON.stringify(toDo));\n}\n\nwindow.onload = function loadTasks() {\n  taskField.innerHTML = \"\";\n  loadedTodo = JSON.parse(localStorage.getItem('toDo'));\n  toDo = loadedTodo;\n  toDoCount = loadedTodo.length;\n  document.getElementById('toDo-count').innerHTML = ' (' + toDoCount + ')';\n  loadedTodo.forEach(function (el, index) {\n    return createTaskField(index, taskField);\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///352\n")})();